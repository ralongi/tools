*************************************************************************************************************************

******************* USEFUL REFERENCE LINK: https://tps-server.lab.bos.redhat.com/pages/man/index.html *******************

*************************************************************************************************************************

main password: fo0m4nchU

password for RHV EUS stable system (tps-rhv-7s-4-h.rhev.lab.eng.brq.redhat.com): qum5net

sedeasy ()
{
sed -i "s/$(echo $1 | sed -e 's/\([[\/.*]\|\]\)/\\&/g')/$(echo $2 | sed -e 's/[\/&]/\\&/g')/g" $3
} 

## Errata info

http://wiki.test.redhat.com/ReferenceManual/StableSystems#Connecting
http://penguins.usersys.redhat.com/monitoring/
https://wiki.test.redhat.com/ErrataWorkflow
http://wiki.test.redhat.com/Kernel/Filesystem/errata
https://wiki.test.redhat.com/ErrataWorkflow/PreparingToTest
https://wiki.test.redhat.com/ErrataWorkflow/PreparingToTest#AutomatedRpmdiffTests
http://wiki.test.redhat.com/Faq/Tps/RunningTpsManually


# From CT:

For Docs approval I always email these two people ->
Lucie Manaskova and Marci Wolfe

Old erratas for reference with waives ->

https://errata.devel.redhat.com/advisory/39299

https://errata.devel.redhat.com/advisory/39302

For TPS issues I cannot figure out I always email ->

Timothy Redaelli & Lucas Svaty & Pavel Novotny

TPS system links for accessing systems ->

http://wiki.test.redhat.com/ReferenceManual/StableSystems#Connecting

# From Amit:

1. https://wiki.test.redhat.com/Faq/Tps/HowToInstallMissingPackages#MissingPackagesNeededForRebuild
2. http://wiki.test.redhat.com/ErrataWorkflow/PreparingToTest#TroubleshootingTPS

# to build a stable system that TPS jobs can automatically run on for 24 hours:

bkr workflow-tomorrow 7 --hostrequire=hostlabcontroller=lab-02.rhts.eng.bos.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=stable-openshift-enterprise-3.6 --arch=x86_64 

OR

bkr workflow-tomorrow 7 --machine=netqe5.knqe.lab.eng.bos.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=stable-openshift-enterprise-3.6

if [[ $arch == "x86_64" ]]; then


# To build stable system for RHEL7 x86_64

bkr workflow-tomorrow 7 --hostrequire=hostlabcontroller=lab-02.rhts.eng.rdu.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=fast-datapath-for-rhel-7-rpms --arch=x86_64 --task "! yum -y install http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-twisted-web/12.1.0/5.el7_2/x86_64/python-twisted-web-12.1.0-5.el7_2.x86_64.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-twisted-core/12.2.0/4.el7/x86_64/python-twisted-core-12.2.0-4.el7.x86_64.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-zope-interface/4.0.5/4.el7/x86_64/python-zope-interface-4.0.5-4.el7.x86_64.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/SOAPpy/0.11.6/17.el7/noarch/SOAPpy-0.11.6-17.el7.noarch.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-fpconst/0.7.3/12.el7/noarch/python-fpconst-0.7.3-12.el7.noarch.rpm http://download.devel.redhat.com/brewroot/packages/container-selinux/2.77/1.el7_6/noarch/container-selinux-2.77-1.el7_6.noarch.rpm tcpdump python-netifaces libibverbs python3" --task "! /bin/cp -f /etc/tpsd.conf /etc/tpsd.conf_orig" --task '! wget -O /etc/tpsd.conf http://netqe-infra01.knqe.lab.eng.bos.redhat.com/misc/tpsd.conf' --task "! mount -a -t nfs" --task "! systemctl restart tpsd --task "!  wget -O ~/stable_cleanup.sh http://netqe-infra01.knqe.lab.eng.bos.redhat.com/share/ralongi/stable_cleanup.sh; chmod +x ~/stable_cleanup.sh"

# To build stable system for RHEL7 ppc64le:

NOTE: For repo "rhel-7-for-power9-fast-datapath-rpms", use test profile "stable-rhel-alt-7-server"

bkr workflow-tomorrow 7 --hostrequire=hostlabcontroller=lab-02.rhts.eng.rdu.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=fast-datapath-for-rhel-7-rpms --arch=ppc64le --task "! yum -y install http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-twisted-web/12.1.0/5.el7_2/ppc64le/python-twisted-web-12.1.0-5.el7_2.ppc64le.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-twisted-core/12.2.0/4.el7/ppc64le/python-twisted-core-12.2.0-4.el7.ppc64le.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-zope-interface/4.0.5/4.el7/ppc64le/python-zope-interface-4.0.5-4.el7.ppc64le.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/SOAPpy/0.11.6/17.el7/noarch/SOAPpy-0.11.6-17.el7.noarch.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-fpconst/0.7.3/12.el7/noarch/python-fpconst-0.7.3-12.el7.noarch.rpm http://download.devel.redhat.com/brewroot/packages/container-selinux/2.77/1.el7_6/noarch/container-selinux-2.77-1.el7_6.noarch.rpm tcpdump python-netifaces libibverbs python3" --task "! /bin/cp -f /etc/tpsd.conf /etc/tpsd.conf_orig" --task '! wget -O /etc/tpsd.conf http://netqe-infra01.knqe.lab.eng.bos.redhat.com/misc/tpsd.conf' --task "! mount -a -t nfs" --task "! systemctl restart tpsd --task "!  wget -O ~/stable_cleanup.sh http://netqe-infra01.knqe.lab.eng.bos.redhat.com/share/ralongi/stable_cleanup.sh; chmod +x ~/stable_cleanup.sh"

Note: use test profile "stable-rhel-alt-7-server" with above ppc64le command for RHEL ALT streams.

# To build stable system for RHEL7 s390x:

bkr workflow-tomorrow 7 --hostrequire=hostlabcontroller=lab-02.rhts.eng.bos.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=fast-datapath-for-rhel-7-rpms --arch=s390x --task "! yum -y install http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-twisted-web/12.1.0/5.el7_2/s390x/python-twisted-web-12.1.0-5.el7_2.s390x.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-twisted-core/12.2.0/4.el7/s390x/python-twisted-core-12.2.0-4.el7.s390x.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-zope-interface/4.0.5/4.el7/s390x/python-zope-interface-4.0.5-4.el7.s390x.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/SOAPpy/0.11.6/17.el7/noarch/SOAPpy-0.11.6-17.el7.noarch.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-fpconst/0.7.3/12.el7/noarch/python-fpconst-0.7.3-12.el7.noarch.rpm http://download.devel.redhat.com/brewroot/packages/container-selinux/2.77/1.el7_6/noarch/container-selinux-2.77-1.el7_6.noarch.rpm tcpdump python-netifaces libibverbs python3" --task "! /bin/cp -f /etc/tpsd.conf /etc/tpsd.conf_orig" --task '! wget -O /etc/tpsd.conf http://netqe-infra01.knqe.lab.eng.bos.redhat.com/misc/tpsd.conf' --task "! mount -a -t nfs" --task "! systemctl restart tpsd --task "!  wget -O ~/stable_cleanup.sh http://netqe-infra01.knqe.lab.eng.bos.redhat.com/share/ralongi/stable_cleanup.sh; chmod +x ~/stable_cleanup.sh"

# To build stable system for RHEL8 x86_64

bkr workflow-tomorrow 8 --split-buildroot --hostrequire=hostlabcontroller=lab-02.rhts.eng.bos.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=fast-datapath-for-rhel-8-rpms --arch=x86_64 --variant=BaseOS --task "! dnf -y install openvswitch-selinux-extra-policy tcpdump network-scripts libatomic" --task "! /bin/cp -f /etc/tpsd.conf /etc/tpsd.conf_orig" --task '! wget -O /etc/tpsd.conf http://netqe-infra01.knqe.lab.eng.bos.redhat.com/misc/tpsd.conf' --task "! mount -a -t nfs" --task "! systemctl restart tpsd" --task '! dnf -y install libibverbs'

# To build stable system for RHEL8 ppc64le

bkr workflow-tomorrow 8 --split-buildroot --hostrequire=hostlabcontroller=lab-02.rhts.eng.rdu.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=fast-datapath-for-rhel-8-rpms --arch=ppc64le --variant=BaseOS --task "! dnf -y install openvswitch-selinux-extra-policy tcpdump network-scripts libatomic" --task "! /bin/cp -f /etc/tpsd.conf /etc/tpsd.conf_orig" --task '! wget -O /etc/tpsd.conf http://netqe-infra01.knqe.lab.eng.bos.redhat.com/misc/tpsd.conf' --task "! mount -a -t nfs" --task '! systemctl restart tpsd' --task "! dnf -y install libibverbs"

# To build stable system for RHEL8 s390x

bkr workflow-tomorrow 8 --split-buildroot --hostrequire=hostlabcontroller=lab-02.rhts.eng.bos.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=fast-datapath-for-rhel-8-rpms --arch=s390x --variant=BaseOS --task "! dnf -y install openvswitch-selinux-extra-policy tcpdump network-scripts libatomic" --task "! /bin/cp -f /etc/tpsd.conf /etc/tpsd.conf_orig" --task '! wget -O /etc/tpsd.conf http://netqe-infra01.knqe.lab.eng.bos.redhat.com/misc/tpsd.conf' --task "! mount -a -t nfs" --task "! systemctl restart tpsd" --task "! dnf -y install libibverbs"

# To build stable system for RHEL8 aarch64

bkr workflow-tomorrow 8 --split-buildroot --machine=dev-010.arm.eng.rdu2.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=fast-datapath-for-rhel-8-rpms --arch=aarch64 --variant=BaseOS --task "! dnf -y install openvswitch-selinux-extra-policy tcpdump network-scripts libatomic" --task "! /bin/cp -f /etc/tpsd.conf /etc/tpsd.conf_orig" --task "! wget -O /etc/tpsd.conf http://netqe-infra01.knqe.lab.eng.bos.redhat.com/misc/tpsd.conf" --task "! mount -a -t nfs" --task "! systemctl restart tpsd" --task "! dnf -y install libibverbs"

# to install selinux and libunbound packages

arch=$(uname -m)
RPM_OVS_SELINUX_EXTRA_POLICY=http://download.devel.redhat.com/brewroot/packages/openvswitch-selinux-extra-policy/1.0/14.el7fdp/noarch/openvswitch-selinux-extra-policy-1.0-14.el7fdp.noarch.rpm
RPM_OVS=http://download.devel.redhat.com/brewroot/packages/openvswitch2.12/2.12.0/4.el7fdp/$arch/openvswitch2.12-2.12.0-4.el7fdp.$arch.rpm
yum -y install $RPM_OVS_SELINUX_EXTRA_POLICY
yum -y install $RPM_OVS
for i in $(rpm -qa | grep openvswitch | grep -v selinux); do yum -y remove $i; done
for i in $(rpm -qa | grep ovn); do yum -y remove $i; done

# to remove all openvswitch packages except to openvswitch-selinux

for i in $(rpm -qa | grep openvswitch | grep -v selinux); do yum -y remove $i; done
for i in $(rpm -qa | grep ovn); do yum -y remove $i; done

# to install specific openvswitch package

yum -y install http://download.eng.bos.redhat.com/brewroot/packages/openvswitch2.11/2.11.0/13.el7fdp/ppc64le/openvswitch2.11-2.11.0-13.el7fdp.ppc64le.rpm

# to install python-twisted dependencies

# x86_64

yum -y install http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-twisted-web/12.1.0/5.el7_2/x86_64/python-twisted-web-12.1.0-5.el7_2.x86_64.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-twisted-core/12.2.0/4.el7/x86_64/python-twisted-core-12.2.0-4.el7.x86_64.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-zope-interface/4.0.5/4.el7/x86_64/python-zope-interface-4.0.5-4.el7.x86_64.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/SOAPpy/0.11.6/17.el7/noarch/SOAPpy-0.11.6-17.el7.noarch.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-fpconst/0.7.3/12.el7/noarch/python-fpconst-0.7.3-12.el7.noarch.rpm

# ppc64le

yum -y install http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-twisted-web/12.1.0/5.el7_2/ppc64le/python-twisted-web-12.1.0-5.el7_2.ppc64le.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-twisted-core/12.2.0/4.el7/ppc64le/python-twisted-core-12.2.0-4.el7.ppc64le.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-zope-interface/4.0.5/4.el7/ppc64le/python-zope-interface-4.0.5-4.el7.ppc64le.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/SOAPpy/0.11.6/17.el7/noarch/SOAPpy-0.11.6-17.el7.noarch.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-fpconst/0.7.3/12.el7/noarch/python-fpconst-0.7.3-12.el7.noarch.rpm

# s390x

yum -y install http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-twisted-web/12.1.0/5.el7_2/s390x/python-twisted-web-12.1.0-5.el7_2.s390x.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-twisted-core/12.2.0/4.el7/s390x/python-twisted-core-12.2.0-4.el7.s390x.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-zope-interface/4.0.5/4.el7/s390x/python-zope-interface-4.0.5-4.el7.s390x.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/SOAPpy/0.11.6/17.el7/noarch/SOAPpy-0.11.6-17.el7.noarch.rpm http://download.eng.bos.redhat.com/brewroot/vol/rhel-7/packages/python-fpconst/0.7.3/12.el7/noarch/python-fpconst-0.7.3-12.el7.noarch.rpm

yum -y install tcpdump

yum -y install python-netifaces

yum -y install http://download.devel.redhat.com/brewroot/packages/container-selinux/2.77/1.el7_6/noarch/container-selinux-2.77-1.el7_6.noarch.rpm

yum -y install http://download.devel.redhat.com/brewroot/packages/openvswitch-selinux-extra-policy/1.0/11.el7fdp/noarch/openvswitch-selinux-extra-policy-1.0-11.el7fdp.noarch.rpm

# to remove all ovs and ovn packages except for selinux (do this before each test run)
for i in $(rpm -qa | grep ovn); do yum -y remove $i; done
for i in $(rpm -qa | grep openvswitch | grep -v selinux); do yum -y remove $i; done

# to resolve libibverbs.so.1 errors

yum -y install libibverbs

# to disable srpm/rebuild tests (fast datapath channel ONLY, not extras channel (i.e. dpdk, driverctl)):

# Note: For below entry in tpsd.conf, it should be the repo name specified in the TPS job minus "rpms"

(01:21:24 PM) Timothy Redaelli: vim /etc/tpsd.conf
(01:22:00 PM) Timothy Redaelli: find
(01:22:11 PM) Timothy Redaelli: SRPM_SKIP_CHANNELS=
(01:22:35 PM) Timothy Redaelli: and append rhel-7-fast-datapath- so you should have something like: SRPM_SKIP_CHANNELS='jbappplatform-,rhel-7-fast-datapath-'
(01:22:58 PM) Timothy Redaelli: then you can restart tpsd (service tpsd restart) and it should work

(07:08:57 AM) ralongi: ping
(07:28:27 AM) Timoth Redaelli: halo
(07:35:20 AM) ralongi: Hi Timothy.  I was just told about another errata that i was unaware of: https://errata.devel.redhat.com/advisory/43708
(07:35:41 AM) ralongi: the two tps jobs failed.  one looks like it's because of the srpms rebuild
(07:36:00 AM) ralongi: is that something we have to get approval to disable/skip each release?
(07:36:08 AM) Timoth Redaelli: it's for DPDK standalone package on extras 7.7
(07:36:10 AM) Timoth Redaelli: aka for august
(07:36:21 AM) Timoth Redaelli: it's not FDP
(07:37:37 AM) Timoth Redaelli: and we shouldn't disable rebuild test on extras
(07:38:24 AM) ralongi: is dpdk the only package that is in the extras channel?
(07:38:34 AM) Timoth Redaelli: dpdk and driverctl
(07:40:21 AM) ralongi: can we disable rebuild for fast datapath (i.e. ovs and ovn) for every release?
(07:41:01 AM) ralongi: or do we need approval from someone each release?
(07:41:12 AM) Timoth Redaelli: for fast datapath we can do for every release

# to kick off tps job using bkr:

bkr workflow-tomorrow --errata=43252 --variant=detect --tps-rpmtest --tps-srpmtest --profile=stable-openshift-enterprise-3.6 --hostrequire=hostlabcontroller=lab-02.rhts.eng.bos.redhat.com --arch=x86_64 --reserve-if-fail

bkr workflow-tomorrow --errata=108133 --variant=detect --tps-failed --tps-rpm --profile=fast-datapath-for-rhel-8-rpms --hostrequire=hostlabcontroller=lab-02.rhts.eng.rdu.redhat.com --arch=x86

# DPDK RHEL-8
errata=115872

# for TPS
bkr workflow-tomorrow --task "! dnf -y install libibverbs" --errata=$errata --variant=detect --tps-failed --tps-rpmtest --tps-srpmtest --profile=stable-rhel-8-baseos --hostrequire=hostlabcontroller=lab-02.rhts.eng.rdu.redhat.com --arch=x86_64 --reserve-if-fail

# for DistQA TPS
bkr workflow-tomorrow --task "! dnf -y install libibverbs" --errata=$errata --variant=detect --tps-failed --tps-rhnqa --profile=stable-rhel-8-baseos --hostrequire=hostlabcontroller=lab-02.rhts.eng.rdu.redhat.com --arch=x86_64 --reserve-if-fail

$ To upload results to errata tool when using above method: tps-results  --job <beaker job ID> (tps-results  --job 7392762)

Hi Rick,
Happy new year.

You emailed the correct person. 
We have another tool to upload results to the errata tool called 'tps-results' ([1]).
It is in qa-tools-workstation package (qa-tools-workstation-tps-results if you prefer split packages).

Brief documentation for running TPS tests in beaker is [2].
In short: Run `tps-results  --job 7392762`.
Tool will read errata number from job results, no need to specify it on the cmdline.

Hope that helps,

[1] https://wiki.test.redhat.com/tcerna/tps-results#TPSresults
[2]  https://wiki.test.redhat.com/BaseOs/Projects/Automation/TpsInBeakerUserDocs

### DPDK / extras errata:

# best to build stable system manually:

- provision system with target compose

# Install:
sed -i 's/enabled = 0/enabled = 1/g' /etc/yum.repos.d/beaker-CRB.repo
yum -y install numactl-devel doxygen python3-devel python3-sphinx meson zlib-devel gcc libibverbs libarchive-devel python3-pyelftools
sed -i 's/enabled = 1/enabled = 0/g' /etc/yum.repos.d/beaker-CRB.repo

# stable system RHEL 8 ppc64le

Hi,

I'm sending an email to ask for a "permanent" TPS stable system for
RHEL8 on ppc64le, but in the meanwhile I created a stable system:

# bkr workflow-tomorrow 8 --split-buildroot --hostrequire=hostlabcontroller=lab-02.rhts.eng.rdu.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=fast-datapath-for-rhel-8-rpms --arch=ppc64le --variant=BaseOS

Then I had to install some needed packages:

# dnf install -y openvswitch-selinux-extra-policy tcpdump network-scripts

And to change tpsd.conf and to restart tpsd as usual:

# the channel name used should be the repo name specified in the errata summary

/bin/cp -f /etc/tpsd.conf /etc/tpsd.conf_orig

# RHEL7:
#channel="rhel-7-fast-datapath-"
#channel="rhel-7-for-power9-fast-datapath-"
#channel="rhel-7-for-power-le-fast-datapath-"

# RHEL 8:
#channel="fast-datapath-for-rhel-"

sedeasy ()
{
sed -i "s/$(echo $1 | sed -e 's/\([[\/.*]\|\]\)/\\&/g')/$(echo $2 | sed -e 's/[\/&]/\\&/g')/g" $3
} 

sedeasy "SRPM_REBUILD_SKIP_CHANNELS=''" "SRPM_REBUILD_SKIP_CHANNELS='$channel'" "/etc/tpsd.conf"
sedeasy "# TPS_LIMIT_CHANNELS_TO=''" "TPS_LIMIT_CHANNELS_TO='$channel'" "/etc/tpsd.conf"
sedeasy "# export TPS_LIMIT_CHANNELS_TO" "export TPS_LIMIT_CHANNELS_TO" "/etc/tpsd.conf"

systemctl restart tpsd

sed -i "s/SRPM_SKIP_CHANNELS='\(.*\)'/SRPM_SKIP_CHANNELS='\1,fast-datapath-for-rhel-'/" /etc/tpsd.conf

RHEL 7
sed -i "s/SRPM_REBUILD_SKIP_CHANNELS='\(.*\)'/SRPM_REBUILD_SKIP_CHANNELS='\1rhel-7-fast-datapath-'/" /etc/tpsd.conf
sed -i "s/SRPM_REBUILD_SKIP_CHANNELS='\(.*\)'/SRPM_REBUILD_SKIP_CHANNELS='\1rhel-7-for-power9-fast-datapath-'/" /etc/tpsd.conf
sed -i "s/SRPM_REBUILD_SKIP_CHANNELS='\(.*\)'/SRPM_REBUILD_SKIP_CHANNELS='\1rhel-7-for-power-le-fast-datapath-'/" /etc/tpsd.conf


#sed -i "s/SRPM_REBUILD_SKIP_CHANNELS='\(.*\)'/SRPM_REBUILD_SKIP_CHANNELS='\1fast-datapath-for-rhel-,rhel-7-fast-datapath-,rhel-7-for-power-le-fast-datapath-,rhel-7-for-power9-fast-datapath-'/" /etc/tpsd.conf
systemctl restart tpsd

### Best to Push Now/Push OVN and openvswitch RHEL8 at the same time ###

# info on closing errata if a newer version already exists in staging

https://wiki.test.redhat.com/ErrataWorkflow/ClosingErrata#ANewerVersionAlreadyExistsInStage

# info on deal with layered products, create new test profile, etc: 

http://wiki.test.redhat.com/Faq/Tps/HowToDealWithLayeredProducts


### after first round of TPS jobs are all set, do: Push Now, Push (to kick off RHNQA TPS jobs)

# to determine stable systems to be used with specific Job ID (assumes the job HAS NEVER BEEN STARTED OR RUN)

/mnt/qa/scratch/rbiba/tps-utils/tps-find-ss <Job ID>
Example: /mnt/qa/scratch/rbiba/tps-utils/tps-find-ss 376930

# to determine test profile being used by a stable system:

[ralongi@ralongi ~]$ want_host=x86-64-7s-6eus-v1.ss.eng.bos.redhat.com
[ralongi@ralongi ~]$ tpsserv-checkin-tpsd -f $want_host | grep ^test_profile
test_profile="stable-rhel-7.6-z-server"
test_profile_updated="2019-08-14 15:30:48 UTC"

# To re-apply test profile to system:

oats-apply-test-profile -b

or: rm -rf /tmp/tps* /var/cache/tps/*chan* ; update-tpsd-settings

systemctl restart tpsd

# send email to docs:

to: lmanasko@redhat.com, mwolfe@redhat.com
cc: ctrautma@redhat.com, asupugad@redhat.com, kfida@redhat.com

Subject: Errata Doc Review/Approval

Hi,

Please review the docs for the errata links listed below.

Thanks,
Rick

https://errata.devel.redhat.com/advisory/43252
https://errata.devel.redhat.com/advisory/43248
https://errata.devel.redhat.com/advisory/43249
https://errata.devel.redhat.com/advisory/43253
https://errata.devel.redhat.com/advisory/43254


# For rel eng issues, contact: bhills (used to be asabadra or kmogal)
# For tps issues, contact: rbiba or qwan (better to use #tps)

#########################################################################

Wait until CAT tests are passed before debugging RHNQA TPS tests

(11:40:32 AM) sgraf: ralongi: I *think* that CAT test passed *after* you finished TPS and succesfull CAT test reschedules TPS>...
(11:40:45 AM) sgraf: ralongi: see timestamp here https://errata.devel.redhat.com/advisory/49256/test_run/ccat
(11:40:54 AM) sgraf: ralongi: it matches to your message you see
(11:43:09 AM) shruti [~shruti@10.18.33.30] entered the room.
(11:44:17 AM) ralongi: sgraf: Thanks.  So it seems that best practice is to wait until after CAT passes before working on TPS jobs.
(11:44:42 AM) sgraf: ralongi: right...
(11:46:22 AM) ralongi: sgraf: I thought TPS wouldn't even start to run at all until after CAT passed so I learned something new :-)  I'll definitely keep that in mind going forward.  thanks again.
(11:48:01 AM) sgraf: ralongi: you're welcome

#########################################################################

Random things to try (i.e. when "package uniqueness test" fails:

Dunno.  I logged in to one box, everything looked fine.  I rebuilt the cache with tps-setup-channel-cache and re-ran tps-make-lists, and all was fine.

## Note from me based on when I have had to do this:  running tps-setup-channel-cache may be all that is necessary

So I rescheduled all the runs, and they all worked just fine.

No clues as to why the same package was on both Old & New lists the first time around, unless something like yum-chron or some other automatic tool that doesn't understand Live-vs-QA sources was running (and corrupting cache) in the mean time.  I didn't see anything like that, but also didn't look too hard.

In any case, all the runs are now showing PASS at https://errata.devel.redhat.com/tps/rhnqa_results/42624 <https://errata.devel.redhat.com/tps/rhnqa_results/42624>

#########################################################################

To provision 7.6-eus stable system:

Must manually build the system as bkr workflow-tomorrow doesn't build it properly.

http://wiki.test.redhat.com/Faq/Beaker/Erratify

Note: chelsio3.knqe.lab.eng.bos.redhat.com should be available as the stable system.

#########################################################################

To check details of what a particular package used for supporting packages when debugging TPS failures.  Example for dpdk:

http://download.eng.bos.redhat.com/brewroot/vol/rhel-8/packages/dpdk/19.11/3.el8/data/logs/x86_64/root.log
http://download.eng.bos.redhat.com/brewroot/vol/rhel-8/packages/dpdk/19.11.3/1.el8/data/logs/aarch64/root.log

19.11.3/1.el8

#########################################################################

DPDK errata File list error info:

(01:37:46 PM) tredaelli: hi, I'm puzzled for this error http://nest.test.redhat.com//mnt/qa/scratch/x86-64-7s-v1/2019:49917/tps/tps-srpmtest.html#Rebuild%20Test-7-6-1
(02:04:12 PM) jwl_home: tredaelli: looks like the dist tag identification failed between el7_8 and el7.
(02:05:25 PM) jwl_home: the 'el7' native to the test machine was used rather than the 'el7_8' that the advisory packages used.  Not sure why.
(02:06:22 PM) jwl_home: Mucking about with tps-get-dist-from-spec (or grepping in the logs for it) might reveal more if you're really curious.
(02:06:38 PM) jwl_home: However, I'd say "looks like the packages were built okay" and move on with a waiver.
(02:07:13 PM) jwl_home: It *is* possible to fool TPS into using the wrong %dist value by having weird & complex expressions in the .spec file.  Probably by having simple ones, too :)
(02:13:04 PM) tredaelli: ralongi: ^^
(02:14:33 PM) ralongi: tredaelli: OK.  Thanks.  I will waive the failed test.
(02:22:09 PM) jwl_home: fwiw, you can see that the build did what it was told, in blue text at the top of that test:
(02:22:24 PM) jwl_home: Rebuild command: x86_64 rpmbuild --rebuild   --define "dist .el7" [and so on]
(02:22:39 PM) jwl_home: it's the "dist .el7" that causes that result

#########################################################################

TPS installation and tools info:

From rbiba:

Most of the CLI tools are part of the TPS package, which you can install as described here:

http://wiki.test.redhat.com/ReferenceManual/Tps#InstallingTPS

tps-find-ss is an exception and is stored outside the package. Note that some docs on the wiki refer to other scripts from the same directory, so if you check out http://nest.test.redhat.com/mnt/qa/scratch/rbiba/tps-utils/ you can find some other potentially useful scripts to download. Sometimes I update these scripts, though, which means that /mnt/qa remains the ideal place to run them from.

Drive should be mounted:

[ralongi@ralongi-home tps-utils]$ mount | grep /mnt/qa
nest.test.redhat.com:/mnt/qa on /mnt/qa type nfs4 (rw,nosuid,nodev,noatime,vers=4.0,rsize=8192,wsize=8192,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,clientaddr=10.3.114.112,local_lock=none,addr=10.16.115.148)

fstab entry:

nest.test.redhat.com:/mnt/qa /mnt/qa nfs defaults,rsize=8192,wsize=8192,bg,auto,noatime,nosuid,nodev,intr 0 0

#########################################################################

To find a free system for a particular arch, search for the arch and then add "free/" before the "?".

Example:

https://beaker.engineering.redhat.com/free/?systemsearch-0.table=System%2FArch&systemsearch-0.keyvalue=&systemsearch-0.operation=contains&systemsearch-0.value=ppc64le&systemsearch_column_System%2FArch=System%2FArch&systemsearch_column_System%2FLoanedTo=System%2FLoanedTo&systemsearch_column_System%2FModel=System%2FModel&systemsearch_column_System%2FName=System%2FName&systemsearch_column_System%2FStatus=System%2FStatus&systemsearch_column_System%2FType=System%2FType&systemsearch_column_System%2FUser=System%2FUser&systemsearch_column_System%2FVendor=System%2FVendor

#########################################################################

When staging has a newer version of the package you are trying to release causing DistQA TPS jobs to fail:

- Log into each system that the failed test was run on
- tps-cd YYYY:NNNNN (i.e. tps-cd 2020:53552)
- execute: tps-rhnqa --exact
- manually upload results
    - from same directory, run: /mnt/qa/scratch/rbiba/tps-utils/tps-report-interactive

Links:
https://wiki.test.redhat.com/ErrataWorkflow/ClosingErrata#ANewerVersionAlreadyExistsInStage
http://wiki.test.redhat.com/Faq/Tps/ReportingTpsResultsManually

#########################################################################

Problem: The TPS or DistQA TPS jobs will not select the desired stable system to run the job(s).
Resolution: Run the TPS or DistQA TPSjob(s) manually as follows:

 - Log into the target desired stable system where you want to run the job
 - Execute: tps-cd -c <Full Errata> 
   - For example: tps-cd -c 2020:55595
 - Note: you must execute "export TPSQ_RHNDEST=<repo name> before running tests manually (i.e. export TPSQ_RHNDEST=rhel-7-fast-datapath-rpms)
 - From that directory, execute: tps -m
 - Once job has run successfully and passed, from same directory execute: /mnt/qa/scratch/rbiba/tps-utils/tps-report-interactive
   - Would you like to report a good result of this TPS job? (y/n) y (assuming job passed)
   - Enter the text that should describe the link to these log files (e.g. "Known issue, bug 123456", or "Ran manually successfully" (default text if you do not enter anything)): <hit enter to accept default text>
   
The TPS results page for the errata should now reflect result: Ran manually successfully

Helpful links: 
- http://wiki.test.redhat.com/Faq/Tps/RunningTpsManually
- http://wiki.test.redhat.com/Faq/Tps/ReportingTpsResultsManually

#########################################################################

To keep a recently built stable system extending reserve time by 99 hours everyday at 5AM:

- crontab -e
- 0 5 * * * /usr/bin/extendtesttime.sh 99
- systemctl restart crond

#########################################################################

DPDK errata x86_64 system: x86-64-8-v1.ss.eng.bos.redhat.com (fo0m4nchU)

#########################################################################
# To manually install stable system:

http://wiki.test.redhat.com/Faq/Beaker/Erratify

provision system using scheduler (reserve)

to install oats:

yum -y install wget
wget http://nest.test.redhat.com/mnt/tpsdist/install-oats.sh
chmod +x install-oats.sh
./install-oats.sh

yum -y install nfs-utils ; service rpcbind start
yum -y install perl-Date-Manip
yum -y install rpm-build

sed -i 's/enabled = 0/enabled = 1/g' /etc/yum.repos.d/beaker-CRB.repo
yum -y install numactl-devel doxygen python3-devel python3-sphinx meson zlib-devel gcc libibverbs
sed -i 's/enabled = 1/enabled = 0/g' /etc/yum.repos.d/beaker-CRB.repo

echo OATS_TEST_PROFILE="stable-rhel-8.4-eus-baseos " >> /etc/sysconfig/oats.conf
echo TREE=$(egrep -m 1 '^(url|nfs) ' /root/anaconda-ks.cfg |  sed 's|^[^/]*/\(.*\)$|/\1| ; s|//|| ; s|"||g') >> /etc/sysconfig/oats.conf
echo OATS_INSTALL_STAR='false' >> /etc/sysconfig/oats.conf

sed -i 's/# STREAM=3/STREAM=4/g' /etc/sysconfig/oats.conf
#sed -i 's/# STREAMEXT=AUS/STREAMEXT=EUS/g' /etc/sysconfig/oats.conf

systemctl restart oatsd && tail -f /var/log/oatsd

# create /etc/yum.repos.d/myrepo.1.repo for compose being used (this is necessary to make sure the system installs the newest version of packages like libibverbs in case a package like dpdk relies on the newer version of libibverbs)
[myrepo_1]
name=myrepo_1
baseurl=http://download.eng.bos.redhat.com/rhel-8/rel-eng/RHEL-8/latest-RHEL-8.6.0/compose/BaseOS/x86_64/os/
enabled=1
gpgcheck=0
skip_if_unavailable=1


echo OATS_TEST_PROFILE="<test profile name>" >> /etc/sysconfig/oats.conf
#echo OATS_TEST_PROFILE="stable-rhel-8.6-tus-baseos " >> /etc/sysconfig/oats.conf
#echo OATS_TEST_PROFILE="rhel-7-server-rhv-4.2-mgmt-agent-for-power-le-eus-rpms" >> /etc/sysconfig/oats.conf
#echo TREE=$(egrep -m 1 '^(url|nfs) ' /root/anaconda-ks.cfg |  sed 's|^[^/]*/\(.*\)$|/\1| ; s|//|| ; s|"||g') >> /etc/sysconfig/oats.conf
# OR
# TREE=/mnt/redhat/released/rhel-6-7-8/rhel-8/RHEL-8/8.0.0/BaseOS/x86_64/os/
# OR
#TREE=/devops_engarchive2_nfs/redhat/released/rhel-6-7-8/rhel-8/RHEL-8/8.3.0/BaseOS/x86_64/os/
echo OATS_INSTALL_STAR='false' >> /etc/sysconfig/oats.conf


sed -i 's/# STREAM=3/STREAM=6/g' /etc/sysconfig/oats.conf
sed -i 's/# STREAMEXT=AUS/STREAMEXT=TUS/g' /etc/sysconfig/oats.conf

systemctl restart oatsd && tail -f /var/log/oatsd

extendtesttime.sh 99 && sleep 3m; tps-setup-channel-cache && tps-channel-cache && update-tpsd-settings && systemctl stop tpsd

/mnt/qa/scratch/rbiba/tps-utils/tps-report-interactive

# after reboot:
check to make sure /etc/yum.repos.d/ has expected repos:
	ls -alth /etc/yum.repos.d/ | grep tps
	yum repolist

sedeasy ()
{
sed -i "s/$(echo $1 | sed -e 's/\([[\/.*]\|\]\)/\\&/g')/$(echo $2 | sed -e 's/[\/&]/\\&/g')/g" $3
}

# IF problems were observed:
sedeasy "ONBOOT=0" "ONBOOT=1" /etc/sysconfig/oats.conf
systemctl restart oatsd

# Else
tps-setup-channel-cache && tps-channel-cache && update-tpsd-settings

yum -y install rpm-build
yum -y install autoconf automake git libtool openssl-devel selinux-policy-devel

# for manual testing
systemctl stop tpsd

# otherwise:
channel="rhel-7-server-rhv-4.2-mgmt-agent-for-power-le-eus-rpms"
sedeasy "# TPS_LIMIT_CHANNELS_TO=''" "TPS_LIMIT_CHANNELS_TO='$channel'" "/etc/tpsd.conf"
sedeasy "# export TPS_LIMIT_CHANNELS_TO" "export TPS_LIMIT_CHANNELS_TO" "/etc/tpsd.conf"
systemctl restart tpsd

## Note: you don't need to run tpsd to run tests manually so best to stop tpsd whenever possible.

#########################################################################

"Status code: 410 for http://pulp.dist.prod.ext.phx2.redhat.com/content/dist/layered/rhel8/x86_64/fast-datapath/debug/repodata/repomd.xml"

Run: oats-apply-test-profile -b -y

#########################################################################

# To clean up and set up for next test (and run manual test if necessary)

# run step below only once and script will be available for all erratas
wget -O ~/stable_cleanup.sh http://netqe-infra01.knqe.lab.eng.bos.redhat.com/share/ralongi/stable_cleanup.sh

# run steps below specifying target errata as necessary
export errata=2022:99452
. ~/stable_cleanup.sh

# To run tests manually:

tps

#tps-rhnqa

/mnt/qa/scratch/rbiba/tps-utils/tps-report-interactive

#########################################################################

To update tps-polling package (may be necessary when tps-make-lists is failing):

pushd /mnt/tpsdist/test/
service tpsd stop ; rpm -Uvh /mnt/tpsdist/test/tps-polling.noarch* ; service tpsd start
popd

#########################################################################

(03:14:07 PM) ralongi: Hi.  I've tried using bkr workflow-tomorrow as well as manually building a stable system from scratch but keep seeing the following error in /var/log/tpsd: Cannot find latest tps RPM  at /usr/local/bin/update-tps line 134.
(03:14:42 PM) ralongi: tpsd: Error: directory /mnt/qa/scratch does not exist.
(03:15:36 PM) ralongi: any suggestions?  it is only happening on an x86_64 system.  not seeing this issue on ppc64le or s390x system.
(03:16:47 PM) jwl_home: NFS or system setup issue.
(03:17:40 PM) jwl_home: what advisory?  Can it be run on a regular stable system?
(03:18:35 PM) jwl_home: [Where 'NFS' could also involve firewall/networking/lab issues preventing proper use of NFS... the logs from oats-config-nfs, wherever they'd appear via beaker, might have more info.]
(03:18:41 PM) ralongi: https://errata.devel.redhat.com/advisory/86957
(03:19:08 PM) ralongi: /mnt/qa is there but nothing is present under it
(03:19:28 PM) jwl_home: grep scratch /etc/fstab
(03:19:40 PM) jwl_home: or rather, grep qa
(03:20:22 PM) ralongi: .qa.[root@chelsio2 tpsdist]# grep qa /etc/fstab 
(03:20:22 PM) ralongi: nest.test.redhat.com:/mnt/qa /mnt/qa nfs defaults,rsize=8192,wsize=8192,bg,auto,noatime,nosuid,nodev,intr 0 0
(03:20:57 PM) ralongi: /mnt/tpsdist is also present but empty
(03:21:26 PM) ralongi: no regular stable systems appear to be available for this job
(03:22:43 PM) jwl_home: and so, what happens when you do 'mount -t nfs /mnt/qa' or 'mount -a -t nfs'?  Or a 'df -h' to check all mounted disks?
(03:23:22 PM) jwl_home: or oats-config-nfs --check ?
(03:23:35 PM) jwl_home: (or other oats-config-nfs options -- see the --help for it)
(03:24:41 PM) ralongi: looks like mounting the drives again via command did the trick
(03:25:11 PM) jwl_home: I wonder whether /mnt/redhat or other mounts also had issues, or if there was just some network issue when the machine was first setup.
(03:25:13 PM) mstowell is now known as mstowell|away
(03:25:24 PM) jwl_home: In any case, if it's now working... good; done! :-)
(03:26:02 PM) ralongi: i'm not sure but i did try this on a couple of different systems with the same problem.  this will be added to my tps cheat sheet document :-)
(03:26:04 PM) ralongi: thanks!
(03:26:50 PM) jwl_home: quite possible that it's some issue with the workflow or beaker setup, then.  Might want to check the logs and report to the maintainers it if something seems weird.
(03:28:01 PM) jwl_home: oh, and I'm probably going to break lots of stuff with the next oats release.  But that will have a beta cycle so that folks can adjust to it.
(03:28:39 PM) jwl_home: (next release should support rhel-9 and remove support for RHN and RHN-related options.)
(03:28:41 PM) ralongi: ok thanks for the heads up and info
(03:29:00 PM) jwl_home: the nfs stuff, however, is unlikely to change.
(03:29:24 PM) jwl_home: unless there's some weird bug that I'm not currently aware of, of course :)

#########################################################################

UPDATED INFO PER JEFF BASTIAN: RHEL-9 BASED ERRATAS (I.E. DPDK) DO NOT REQUIRE THAT TPS OR DISTQA TPS JOBS BE RUN AS THEY HAVE ALREADY BEEN TESTED VIA RTT.  YOU CAN JUST PUSH TO STAGING AND WHEN THAT PROCESS IS COMPLETE, SET TO REL PREP.  YOU WILL SEE THAT TPS IS ONLY INFORMATIONAL WHEN YOU CLICK CHANGE STATE BUTTON


From Jeff on 10-11-2022:

Jeff Bastian, 20 min
@Rick Alongi the "problem" is the /distribution/install/stable-system task disables the beaker yum repos

Mike Boswell, 20 min
phew.  Thanks Jeff.

Jeff Bastian, 20 min
you can see in the taskout.log for that task::: [ 08:45:05 ] :: [  BEGIN   ] :: Disable local beaker repositories :: actually running 'sed -i 's/enabled=1/enabled=0/' /etc/yum.repos.d/beaker*repo'

so when reservesys tries to run, it can't find those packages

I see you're trying to build a RHEL9 Stable System - is this for a manual TPS run?

Rick Alongi, 18 min
correct

Jeff Bastian, 17 min
If so, you don't have to bother with it: TPS is no longer necessary on RHEL9. RTT does a TPS-equivalent so we can skip it.

Click on the "Change State" button in Errata Tool and you'll see the ⓘ icon next to TPS which means it's "information only", it's not a required step

Rick Alongi, 14 min
cool.  i checked the errata state for https://errata.devel.redhat.com/advisory/100631 and it does have REL PREP blocked off.

Jeff Bastian, 14 min
you need to push  to CDN staging first

that's the blocking step

Jeff Bastian, 11 min, Edited
the blocking steps have the "no smoking" ⊘ symbol if they're not completed

Rick Alongi, 10 min
ok.  so i should be able to push it to staging because TPS is not required.  will DistQA TPS be required?

Jeff Bastian, 10 min
no, DistQA-TPS is also not required

all you have to do is push-to-CDN-staging and wait for CAT (Content Availability Testing) to finish (it will start automatically when the push finishes)

Rick Alongi, 9 min
nice 🙂  i'll just push it to Staging and then set it to REL PREP accordingly.  Thanks!

Jeff Bastian, 9 min
you're welcome!

(RHEL8 still requires TPS and DistQA-TPS, of course, but RHEL9 is much easier to deal with in Errata Tool)

Rick Alongi, 8 min
that is great news 🙂


# To build stable system for DPDK using a specific distro (useful for jobs requiring unreleased distro):

arch=<arch>

bkr workflow-tomorrow --distro=RHEL-8.6.0-20220321.0 --split-buildroot --machine=netqe9.knqe.lab.eng.bos.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=stable-rhel-8-baseos --arch=$arch --variant=BaseOS

bkr workflow-tomorrow --distro=RHEL-8.6.0-updates-20230104.0 --split-buildroot --hostrequire=hostlabcontroller=lab-02.rhts.eng.rdu.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=stable-rhel-8.6-eus-baseos --arch=$arch --variant=BaseOS

bkr workflow-tomorrow --distro=RHEL-7.9-updates-20221213.0 --split-buildroot --machine=kvm-01-guest04.lab.eng.rdu2.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=stable-rhel-7-server --arch=$arch --variant=Server

bkr workflow-tomorrow --distro=RHEL-9.2.0-20230329.11 --split-buildroot --hostrequire=hostlabcontroller=lab-02.rhts.eng.rdu.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=stable-rhel-9-baseos --arch=$arch --variant=BaseOS --task '! dnf -y install libibverbs'

bkr workflow-tomorrow --distro=RHEL-9.2.0-20230329.11 --split-buildroot --hostrequire=hostlabcontroller=lab-02.rhts.eng.rdu.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=stable-rhel-9-baseos --arch=$arch --variant=BaseOS --task '! sed -i "s/enabled = 0/enabled = 1/g" /etc/yum.repos.d/beaker-CRB.repo; dnf -y install numactl-devel doxygen python3-devel python3-sphinx meson zlib-devel gcc libibverbs libarchive-devel python3-pyelftools; sed -i "s/enabled = 1/enabled = 0/g" /etc/yum.repos.d/beaker-CRB.repo'

bkr workflow-tomorrow --distro=RHEL-9.2.0-20230329.11 --errata=109641 --variant=detect --tps-rpmtest --tps-srpmtest --profile=stable-rhel-9-baseos --hostrequire=hostlabcontroller=lab-02.rhts.eng.rdu.redhat.com --arch=x86_64 --reserve-if-fail --task '! sed -i "s/enabled = 0/enabled = 1/g" /etc/yum.repos.d/beaker-CRB.repo; dnf -y install numactl-devel doxygen python3-devel python3-sphinx meson zlib-devel gcc libibverbs libarchive-devel python3-pyelftools; sed -i "s/enabled = 1/enabled = 0/g" /etc/yum.repos.d/beaker-CRB.repo'

#########################################################################
To skip a specific package as part of the TPS SRPM runs:

vi new file: "/usr/local/lib/tps/srpm-local-cases.txt"
copy/paste line below EXACTLY as is (correct spacing/tabs is critical):

extra_built	pass	rpm_name	dpdk-devel	srpm_name	dpdk


replace "dpdk-devel" with high level name of the sub package you want to ignore (don't include version info)
replace dpdk with the parent package from the errata itself (again, no version info)


Another example:

extra_built	pass	rpm_name	network-scripts-openvswitch2.17	srpm_name	openvswitch2.17

#########################################################################

When you need to create new TPS test profile and there are no repos available:

Summary of steps:



From JWL:

Always works better to send a ticket, especially when I’m on PTO… 😄

A quick glance shows that the pulp channel 'rhel-8-for-x86_64-baseos-aus-rpms__8_DOT_6’ is a target of the advisory.

Looking at https://tps-server.lab.bos.redhat.com/pulp_channels/rhel-8-for-x86_64-baseos-aus-rpms__8_DOT_6 shows that the TpsRepo is: https://tps-server.lab.bos.redhat.com/repos/11075

And that page shows “Is Base: false” — which is not correct, and is the source of the problem.  Editing that and setting it to ’true’ should fix it.

Now… why is that, you might ask…

A TestProfile starts with “What do I install first?”  In tps-speak, that’s called a “base repo”.  (A Stream, as you’ve seen, typically has a lot of Repos.  “Base” is simply used to indicate the one that should be configured/installed first.)

So if a Stream has no Repo marked ‘Base = true’, TPS has no idea what to start with — and thus you can’t create a TestProfile for it.

The error message for this condition is… um.  Terrible?  Awful?  Rotten?  Pick your favorite description.

If there’s a good way to mark this automatically, that would be an excellent enhancement — but I’ve not spotted it yet.

That said, I’ve fixed the issue for rhel-8-baseos-aus-rpms-8.6 (actually for all existing 8.* AUS/EUS/E4S/TUS ones), so you should be good to go for that.

  — John

A technical example, using the rails console in place of a video of a bunch of GUI clicking:
irb(main):044:0> PulpChannel.find_by_idname('rhel-8-for-x86_64-appstream-aus-rpms__8_DOT_2').stream.repos.where(base: true)
=> [#<Repo id: 8820, name: "rhel-8-baseos-aus-rpms-8.2", stream_id: 78, active: true, relevant: true, base: true, created_at: "2020-02-19 11:03:40", updated_at: "2020-11-11 03:56:11", dist_method_id: 3>]

irb(main):045:0> PulpChannel.find_by_idname('rhel-8-for-x86_64-appstream-aus-rpms__8_DOT_6').stream.repos.where(base: true)
=> []

After fixes:
irb(main):067:0> pp PulpChannel.where('idname like "rhel-8-for-x86_64-baseos-aus-rpms__8_DOT%"').collect{|x| "#{x.idname}: #{x.repos.where(base:true).collect(&:name).first}"}.sort ; true

["rhel-8-for-x86_64-baseos-aus-rpms__8_DOT_2: rhel-8-baseos-aus-rpms-8.2",
 "rhel-8-for-x86_64-baseos-aus-rpms__8_DOT_4: rhel-8-baseos-aus-rpms-8.4",
 "rhel-8-for-x86_64-baseos-aus-rpms__8_DOT_6: rhel-8-baseos-aus-rpms-8.6",
 "rhel-8-for-x86_64-baseos-aus-rpms__8_DOT_8: rhel-8-baseos-aus-rpms-8.8"]
=> true

#########################################################################

# BEST WAY TO DEAL WITH DPDK ERRATAS BELOW! (3-30-2023)

# build stable systems using bkr-workflow-tomorrow (aliased to wow):

export arch=<arch>

wow --distro=RHEL-9.2.0-20230329.11 --split-buildroot --hostrequire=hostlabcontroller=lab-02.rhts.eng.rdu.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=stable-rhel-9-baseos --arch=$arch --variant=BaseOS --task '! sed -i "s/enabled = 0/enabled = 1/g" /etc/yum.repos.d/beaker-CRB.repo; dnf -y install numactl-devel doxygen python3-devel python3-sphinx meson zlib-devel gcc libibverbs libarchive-devel python3-pyelftools; sed -i "s/enabled = 1/enabled = 0/g" /etc/yum.repos.d/beaker-CRB.repo'

# log into each stable systems and run TPS manually:

# create errata directory and run tps-make-lists:
tps-cd -c <errata> (Example: tps-cd -c 2023:109641)

# run tps:
tps

# upload results to errata tool:
/mnt/qa/scratch/rbiba/tps-utils/tps-report-interactive

#########################################################################

arch=<arch>

for bcc:

# Note: Don't need to specify distro below if the errata is for a released verson of RHEL.

wow --distro=RHEL-8.9.0-updates-20230829.48 --split-buildroot --hostrequire=hostlabcontroller=lab-02.rhts.eng.rdu.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=stable-rhel-8-crb  --arch=$arch --variant=BaseOS --task '! dnf -y install bcc* elfutils-devel elfutils-libelf-devel llvm'

# For libbpf:

wow --distro=RHEL-9.3.0-20230714.2 --split-buildroot --hostrequire=hostlabcontroller=lab-02.rhts.eng.rdu.redhat.com --stable-system --taskparam OATS_TPS_STABLE=true --profile=stable-rhel-9-crb  --arch=$arch --variant=BaseOS --task '! dnf -y install clang elfutils-devel elfutils-libelf-devel'

#########################################################################

(03:33:42 PM) jwl_home: man oats-apply-test-profile => can show what's in an existing profile by fetching an arbitrary profile as a yum.repo file
(03:35:40 PM) jwl_home: finding systems: https://tps-server.lab.bos.redhat.com/wiki/TPSSysSearch
(03:38:10 PM) jwl_home: you can check to see what profiles a particular pulp channel is in
(03:38:47 PM) jwl_home: like: https://tps-server.lab.bos.redhat.com/pulp_channels/8639
(03:39:52 PM) ralongi: i messed up while i was typing and didn't bother to correct it.  sorry.
(03:39:55 PM) jwl_home: If you have the name of a TPS Repo, you can check it thusly: https://tps-server.lab.bos.redhat.com/repos/codeready-builder-for-rhel-8-rpms-8
(03:40:14 PM) jwl_home: And then click on one of the pulp channels to see what test profiles have it
(03:40:41 PM) jwl_home: So... there are a few answers, hopefully interesting/useful, and maybe answering the initial question 

#########################################################################

# ========== Make it possible to use Pulp HTTPS repos ==========
# /etc/pki/ca-trust/source/anchors/2015-RH-IT-Root-CA.pem
# /etc/pki/tls/certs/2015-RH-IT-Root-CA.pem
# /usr/local/lib/tps/certs/2015-RH-IT-Root-CA.pem
for i in /etc/pki/ca-trust/source/anchors /etc/pki/tls/certs /usr/local/lib/tps/certs ; do
  if ! [ -d $i ]; then
    mkdir -p "$i" || true
  fi
done
TPS_CERT=/usr/local/lib/tps/certs/2015-RH-IT-Root-CA.pem
if ! [ -r $TPS_CERT ] ; then
  wget -qO $TPS_CERT http://tps-server.lab.bos.redhat.com/2015-RH-IT-Root-CA.pem
fi
for i in /etc/pki/ca-trust/source/anchors/2015-RH-IT-Root-CA.pem /etc/pki/tls/certs/2015-RH-IT-Root-CA.pem ; do
  if ! [ -r $i ]; then
    cp $TPS_CERT $i
  fi
done

if [ -d /etc/openldap/cacerts ]; then
  if [ ! -h /etc/openldap/cacerts/7e757f6a.0 ]; then 
    ln -s /etc/pki/tls/certs/2015-RH-IT-Root-CA.pem /etc/openldap/cacerts/7e757f6a.0
  fi
fi
PKI_DIR=/etc/pki/CA/certs
if ! [ -d $PKI_DIR ]; then
  mkdir -p $PKI_DIR || true
fi
cp $TPS_CERT /etc/pki/CA/certs/
if command -v update-ca-trust >/dev/null 2>&1 ; then
  update-ca-trust
fi
# =============== end Pulp HTTPS stuff

#########################################################################

