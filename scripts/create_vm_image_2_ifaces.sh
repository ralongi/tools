#!/bin/bash
#

TERM=xterm sshpass -p 100yard- ssh -X -o UserKnownHostsFile=/dev/null -o "StrictHostKeyChecking=no" root@$1 << 'EOF'

cat <<'SCRIPT' > vm_img_tmp.sh
#!/bin/bash
#

vm_version=7.4
rhel_version=$(cut -f1 -d. /etc/redhat-release | sed 's/[^0-9]//g')
vm_maj_ver=$(echo $vm_version | awk -F "." '{print $1}')

#############################################################
vm=rhel$vm_version

if [[ $vm_maj_ver -ge 7 ]]; then
	distro="http://download.eng.bos.redhat.com/rel-eng/latest-RHEL-7/compose/Server/x86_64/os/"
	optional="http://download.eng.bos.redhat.com/rel-eng/latest-RHEL-7/compose/Server/x86_64/os/"
	iperf_distro="http://netqe-infra01.knqe.eng.rdu2.dc.redhat.com/repo/packages/iperf-2.0.4-1.el7.rf.x86_64.rpm"
	netperf_distro="http://netqe-infra01.knqe.eng.rdu2.dc.redhat.com/repo/packages/netperf-2.6.0-1.el7.x86_64.rpm"
else
	distro="http://download.eng.bos.redhat.com/rel-eng/latest-RHEL-6/compose/Server/x86_64/os/"
	optional="http://download.eng.bos.redhat.com/rel-eng/latest-RHEL-6/compose/Server/x86_64/os/"
	iperf_distro="http://netqe-infra01.knqe.eng.rdu2.dc.redhat.com/repo/packages/iperf-2.0.5-11.el6.x86_64.rpm"
	netperf_distro="http://netqe-infra01.knqe.eng.rdu2.dc.redhat.com/repo/packages/netperf-2.6.0-1.el6.rf.x86_64.rpm"
fi

# install EPEL repo
timeout 120s bash -c "until ping -c3 dl.fedoraproject.org; do sleep 10; done"	
if [[ $rhel_version -eq 6 ]]; then
	rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
else
	rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
fi

# install sshpass
yum -y install sshpass

#############################################################
echo "
distro=$distro
vm=$vm
"
#############################################################

#    - tidy up any prior installation of this VM

virsh destroy $vm
virsh undefine $vm --managed-save
virsh vol-delete --pool default /var/lib/libvirt/images/$vm.qcow2
virsh pool-refresh default
#############################################################
cat << KS_CFG > ks.cfg

#    Kickstart file automatically generated by anaconda.


#version=DEVEL
install
url --url=$distro
lang en_US.UTF-8
keyboard us
network --onboot yes --device eth0 --bootproto dhcp
timezone --utc America/New_York
rootpw redhat
selinux --enforcing
authconfig --enableshadow --passalgo=sha512
firewall --service=ssh
reboot

#    The following is the partition information you requested
#    Note that any partitions you deleted are not expressed
#    here so unless you clear all partitions first, this is
#    not guaranteed to work

zerombr
clearpart --linux --drives=vda

part pv.252002 --grow --size=500
volgroup vg --pesize=32768 pv.252002
logvol swap --name=lv_swap --vgname=vg --grow --size=2000 --maxsize=4000
logvol / --fstype=ext4 --name=lv_root --vgname=vg --grow --size=1024 --maxsize=51200
part /boot --fstype=ext4 --size=500

bootloader --location=mbr --timeout=5 --append="crashkernel=auto rhgb quiet console=ttyS0,115200"

%packages
@base
@core
-@X Window System
-@development tools
%end

%post
# open console output
cat /etc/grub2.cfg | sed 's/quiet//g' | tee /etc/grub2.cfg

# add repos to do installation
cat >/etc/yum.repos.d/beaker-Server.repo <<REPO
[beaker-Server]
name=beaker-Server
baseurl=$DISTRO
enabled=1
gpgcheck=0
skip_if_unavailable=1
REPO

cat >/etc/yum.repos.d/infra01-server.repo <<REPO
[infra01-server]
name=infra01-server
baseurl=http://netqe-infra01.knqe.eng.rdu2.dc.redhat.com/repo
enabled=1
gpgcheck=0
skip_if_unavailable=1
REPO

# setup ifcfg-eth0
cat >/etc/sysconfig/network-scripts/ifcfg-eth0 <<ETH0
DEVICE="eth0"
BOOTPROTO="dhcp"
ONBOOT="yes"
TYPE="Ethernet"
USERCTL="yes"
PEERDNS="yes"
IPV6INIT="no"
PERSISTENT_DHCLIENT="1"
ETH0
ip link set eth0 up
sleep 5

# setup ifcfg-eth1
cat >/etc/sysconfig/network-scripts/ifcfg-eth1 <<ETH1
DEVICE="eth1"
BOOTPROTO="dhcp"
ONBOOT="yes"
TYPE="Ethernet"
USERCTL="yes"
PEERDNS="yes"
IPV6INIT="no"
PERSISTENT_DHCLIENT="1"
ETH1
ip link set eth1 up
sleep 5
rm -rf "/etc/udev/rules.d/$(ls /etc/udev/rules.d | grep persistent-net)"

# install packages
rpm -ivh $netperf_distro
rpm -ivh $iperf_distro

%end
KS_CFG

#############################################################
pwd=$(pwd)
virt-install --name $vm --vcpus 2 --ram 2048 --vnc --location $distro --disk path=/var/lib/libvirt/images/$vm.qcow2,format=qcow2,size=8,bus=virtio --network bridge=virbr0,model=virtio --initrd-inject=$pwd/ks.cfg --extra-args "ks=file:/ks.cfg"
#############################################################

# shut down the VM
virsh destroy $vm
sleep 5

# convert the qcow2 image to make it smaller
qemu-img convert -O qcow2 /var/lib/libvirt/images/$vm.qcow2 /home/$vm.qcow2

# copy the qcow2 image file to infra01 server
#sshpass -p 100yard- scp /home/$vm.qcow2 -o UserKnownHostsFile=/dev/null -o "StrictHostKeyChecking=no" root@netqe-infra01.knqe.eng.rdu2.dc.redhat.com:/home/www/html/vm/

exit
SCRIPT

bash vm_img_tmp.sh
rm -rf vm_img_tmp.sh

EOF

